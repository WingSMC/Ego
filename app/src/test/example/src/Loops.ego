module

loopTest() {
    loop#outer 20; i {
        for j in 1..=10 {
            if i % j == 0 {
                continue outer
            }
        }
    }

    loop 10 ** 2; i {
        printf("%d", i)
    }

    mut var list = [1, 2, 3, 4, 5]
    for item in list; i = 1 {
        printf("%d: %s", i, item.toStr())
    }
    for mut item in list {
        item = 10
    }
    printf("%s", array.toStr()) // [10, 10, 10, 10, 10]

    var random = math::Random()
    while random.double() < 0.5 {
        if random.double() < 0.25 {
            break
        }
    }

    do {
    } while random.double() < 0.5

    // if also acts as an expression
    var max = if (a > b) a else b

    var complicated = if (a > b) {
        println("a > b")
        // last statement of the block should be an expression
        // and is the value of the block
        if (a > c) a else c
    } else {
        println("a <= b")
        if (b > c) b else c
    }

    // when statement

    // when a + b; n {
    //     n < 2 => println("a + b is less than 2")
    //     2 | 3 => println("a + b is 2 or 3")
    //     5..7 => println("a + b 5 or 6")
    //     7..=10 => println("a + b is between 7, 8, 9, or 10")
    //     11 => println("a + b is 11")
    //     _ => println("a + b is greater than 11")
    // }
}
