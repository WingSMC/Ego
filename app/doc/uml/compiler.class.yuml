// {type:class}
// {direction:topDown}

[Compiler|main(args:List<String>)]

[ModuleCache|projectRoot:NamespaceScope;dependencies:NamespaceScope]
[NamespaceScope|type:NamespaceType;children:Map<String,NamespaceScope>]
[Types|types:Map<String,Type>|getType(name:String):Type]
[Symbol|name:String;type:Type;visibility:Visibility]
[Type|name:String;size:UInt;parents:Set<Type>;mut:Boolean|<get>typeClass:TypeClass;<get>namespaceAsList:List<String>|isCompatible(Type):Boolean;addParent(Type):Boolean]
[Visibility|PUBLIC;PROTECTED;PRIVATE]
[TypeClass|BASIC;REFERENCE;POINTER;FUNCTION;Tuple;CLASS;INTERFACE;ENUM]
[NamespaceType|MODULE;INTERFACE;CLASS;ENUM]

[Types]^[Scope|parent:Scope;symbols:Map<String,Symbol>]
[Scope]^[NamespaceScope|type:NamespaceType;children:Map<String,NamespaceScope>]
[Type]^[FunctionType|returnType:Type;params:List<Type>]
[Type]^[PointerType|pointedType:Type]
[Type]^[ReferenceType|referencedType:Type]
[Type]^[ClassType|fields:Map<Sting,EgoType>;methods:Map<String,FunctionType>]
[Type]^[InterfaceType|methods:Map<String,FunctionType>;implemented:Map<String,Boolean>]

[Compiler]-.->[ModuleVisitor]
[Compiler]-.->[Visitor]
[ModuleVisitor]->[NamespaceScope]
[Visitor]->[Scope]
[Visitor]->[Type]
[ModuleCache]->[NamespaceScope]
[Scope]-parent?>[Scope]
[Scope]-symbols<>[Symbol]
[NamespaceScope]-parent?>[NamespaceScope]
[NamespaceScope]-children<>[NamespaceScope]
[NamespaceScope]-type>[NamespaceType]
[Symbol]-visibility>[Visibility]
[Symbol]-type>[Type]
[Types]-parent?>[Types]
[Types]-types<>[Type]
[Type]-typeClass>[TypeClass]
[Type]-parents<>[Type]
